{"version":3,"sources":["commons/page_header/index.js","commons/page_footer/index.js","modules/profile/new_profile/index.js","modules/profile/profiles/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","PageHeader","className","Footer","PageFooter","NewProfile","this","props","visible","onCancel","onCreate","getFieldDecorator","form","type","align","justify","span","title","okText","onOk","layout","Item","label","rules","required","message","Component","Form","create","Content","tableData","id","fname","mname","lname","Actions","Profiles","state","isModalVisible","handleNewProfile","setState","handleCancel","handleCreate","tableColumns","dataIndex","onClick","render","a","row","profileId","profileData","columns","dataSource","pagination","defaultPageSize","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb9bfc1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { Layout } from 'antd';\r\nconst { Header } = Layout;\r\n\r\nfunction PageHeader(){\r\n    return(\r\n        <Header className=\"profiles-header\">PROFILES</Header>\r\n    );\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\nimport './index.css';\r\nimport { Layout } from 'antd';\r\nconst { Footer } = Layout;\r\n\r\nfunction PageFooter(){\r\n    return(\r\n        <Footer className=\"profiles-footer\"></Footer>\r\n    );\r\n}\r\n\r\nexport default PageFooter;","import './index.css';\r\nimport React, {Component} from 'react';\r\nimport { Form, Modal, Input, Row, Col } from 'antd';\r\n\r\nclass NewProfile extends Component {\r\n\r\n    render(){\r\n        const { visible, onCancel, onCreate, form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        return(\r\n            <Row type=\"flex\" align=\"middle\" justify=\"center\">\r\n                <Col span={24}>\r\n                    <Modal\r\n                        className=\"new-profile-modal\"\r\n                        visible={visible}\r\n                        title=\"Create a New Profile\"\r\n                        okText=\"Create\"\r\n                        onCancel={onCancel}\r\n                        onOk={onCreate}\r\n                    >\r\n                        <Form layout=\"vertical\">\r\n                            <Form.Item label=\"First Name\">\r\n                                {getFieldDecorator('fname', {\r\n                                    rules: [{ required: true, message: 'Please input first name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Middle Name\">\r\n                                {getFieldDecorator('mname', {\r\n                                    rules: [{ required: true, message: 'Please input middle name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Last Name\">\r\n                                {getFieldDecorator('lname', {\r\n                                    rules: [{ required: true, message: 'Please input last name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(NewProfile);","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { Layout, Table, Icon } from 'antd';\r\n\r\nimport PageHeader from '../../../commons/page_header';\r\nimport PageFooter from '../../../commons/page_footer';\r\nimport NewProfileModal from '../new_profile';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst tableData = [\r\n    {\r\n        id: 1,\r\n        fname: 'Julius',\r\n        mname: 'Guevarra',\r\n        lname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 2,\r\n        fname: 'Lisalea',\r\n        mname: 'Angeles',\r\n        lname: 'Santiago',\r\n    },\r\n    {\r\n        id: 3,\r\n        fname: 'Julius',\r\n        mname: 'Guevarra',\r\n        lname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 4,\r\n        fname: 'Lisalea',\r\n        mname: 'Angeles',\r\n        lname: 'Santiago',\r\n    },\r\n    {\r\n        id: 5,\r\n        fname: 'Julius',\r\n        mname: 'Guevarra',\r\n        lname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 6,\r\n        fname: 'Lisalea',\r\n        mname: 'Angeles',\r\n        lname: 'Santiago',\r\n    },\r\n    {\r\n        id: 7,\r\n        fname: 'Julius',\r\n        mname: 'Guevarra',\r\n        lname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 8,\r\n        fname: 'Lisalea',\r\n        mname: 'Angeles',\r\n        lname: 'Santiago',\r\n    },\r\n    {\r\n        id: 9,\r\n        fname: 'Julius',\r\n        mname: 'Guevarra',\r\n        lname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 10,\r\n        fname: 'Lisalea',\r\n        mname: 'Angeles',\r\n        lname: 'Santiago',\r\n    },\r\n];\r\n\r\nclass Actions extends Component {\r\n    render(){\r\n        return(\r\n        <div>\r\n            <Icon className=\"action-icons\" type=\"edit\" />\r\n            <Icon className=\"action-icons\" type=\"delete\" />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Profiles extends Component {\r\n    state = {\r\n        isModalVisible: false\r\n    }\r\n\r\n    handleNewProfile = () => {\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    }\r\n\r\n    handleCreate = () => {\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { isModalVisible } = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: 'FIRST NAME',\r\n                dataIndex: 'fname',\r\n            },\r\n            {\r\n                title: 'MIDDLE NAME',\r\n                dataIndex: 'mname',\r\n            },\r\n            {\r\n                title: 'LAST NAME',\r\n                dataIndex: 'lname',\r\n            },\r\n            {\r\n                title: <Icon className=\"new-profile-icon\" type=\"form\" onClick={() => this.handleNewProfile()}/>,\r\n                dataIndex: \"id\",\r\n                render: (a, row) => <Actions profileId={a} profileData={row} />\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Layout className=\"profiles-body\">\r\n                <PageHeader/>\r\n                <Content className=\"profiles-content\">\r\n                    <Table\r\n                        className=\"content-table\"\r\n                        columns={tableColumns}\r\n                        dataSource={tableData}\r\n                        pagination={{defaultPageSize: 7}}\r\n                    />\r\n                </Content>\r\n                <NewProfileModal visible={isModalVisible} onCancel={() => this.handleCancel()} onCreate={() => this.handleCreate()}/>\r\n                <PageFooter/>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profiles;","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './modules/profile/profiles';\r\n\r\nfunction App() {\r\n  return (\r\n    <MainPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}