{"version":3,"sources":["commons/page_header/index.js","commons/page_footer/index.js","modules/profile/new_profile/index.js","modules/profile/edit_profile/index.js","modules/profile/delete_profile/index.js","utils/httpRequest.js","modules/profile/profiles/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","PageHeader","className","Footer","PageFooter","NewProfile","this","props","visible","onCancel","onCreate","getFieldDecorator","form","type","align","justify","span","title","okText","onOk","layout","Item","label","rules","required","message","Component","Form","create","EditProfile","onUpdate","DeleteProfile","onDelete","api_url","process","httpGetRequest","endpoint","a","async","axios","get","response","data","httpPostRequest","post","httpPutRequest","put","httpDeleteRequest","delete","Content","Actions","editProfile","profileId","profileData","delProfile","onClick","Profiles","state","isNewProfileModalVisible","isEditProfileModalVisible","isDeleteProfileModalVisible","profilesData","handleGetProfiles","then","result","console","log","setState","reverse","handleSaveProfile","handleProfileUpdate","handleProfileDelete","handleEditProfile","id","formRefUpdate","setFieldsValue","pfname","pmname","plname","handleUpdateProfile","validateFields","err","values","resetFields","handleCancelEdit","updateFormRef","handleNewProfile","handleCreateProfile","formRefSave","handleCancelNew","saveFormRef","handleDeleteProfile","handleCancelDelete","tableColumns","dataIndex","render","row","columns","dataSource","pagination","defaultPageSize","rowKey","wrappedComponentRef","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f79ed3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { Layout } from 'antd';\r\nconst { Header } = Layout;\r\n\r\nfunction PageHeader(){\r\n    return(\r\n        <Header className=\"profiles-header\">PROFILES</Header>\r\n    );\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\nimport './index.css';\r\nimport { Layout } from 'antd';\r\nconst { Footer } = Layout;\r\n\r\nfunction PageFooter(){\r\n    return(\r\n        <Footer className=\"profiles-footer\">&copy;JCGDEGUZMAN</Footer>\r\n    );\r\n}\r\n\r\nexport default PageFooter;","import './index.css';\r\nimport React, {Component} from 'react';\r\nimport { Form, Modal, Input, Row, Col } from 'antd';\r\n\r\nclass NewProfile extends Component {\r\n\r\n    render(){\r\n        const { visible, onCancel, onCreate, form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        return(\r\n            <Row type=\"flex\" align=\"middle\" justify=\"center\">\r\n                <Col span={24}>\r\n                    <Modal\r\n                        className=\"new-profile-modal\"\r\n                        visible={visible}\r\n                        title=\"Create a New Profile\"\r\n                        okText=\"Create\"\r\n                        onCancel={onCancel}\r\n                        onOk={onCreate}\r\n                    >\r\n                        <Form layout=\"vertical\">\r\n                            <Form.Item label=\"First Name\">\r\n                                {getFieldDecorator('pfname', {\r\n                                    rules: [{ required: true, message: 'Please input first name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Middle Name\">\r\n                                {getFieldDecorator('pmname', {\r\n                                    rules: [{ required: true, message: 'Please input middle name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Last Name\">\r\n                                {getFieldDecorator('plname', {\r\n                                    rules: [{ required: true, message: 'Please input last name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(NewProfile);","import './index.css';\r\nimport React, {Component} from 'react';\r\nimport { Form, Modal, Input, Row, Col } from 'antd';\r\n\r\nclass EditProfile extends Component {\r\n\r\n    render(){\r\n        const { visible, onCancel, onUpdate, form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        return(\r\n            <Row type=\"flex\" align=\"middle\" justify=\"center\">\r\n                <Col span={24}>\r\n                    <Modal\r\n                        className=\"edit-profile-modal\"\r\n                        visible={visible}\r\n                        title=\"Edit Profile\"\r\n                        okText=\"Update\"\r\n                        onCancel={onCancel}\r\n                        onOk={onUpdate}\r\n                    >\r\n                        <Form layout=\"vertical\">\r\n                            <Form.Item label=\"First Name\">\r\n                                {getFieldDecorator('pfname', {\r\n                                    rules: [{ required: true, message: 'Please input first name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Middle Name\">\r\n                                {getFieldDecorator('pmname', {\r\n                                    rules: [{ required: true, message: 'Please input middle name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Last Name\">\r\n                                {getFieldDecorator('plname', {\r\n                                    rules: [{ required: true, message: 'Please input last name!' }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(EditProfile);","import \"./index.css\";\r\nimport React, {Component} from 'react';\r\nimport { Modal, Row, Col } from 'antd';\r\n\r\nclass DeleteProfile extends Component {\r\n    render(){\r\n        const { visible, onCancel, onDelete } = this.props;\r\n        return(\r\n            <Row type=\"flex\" align=\"middle\" justify=\"center\">\r\n                <Col span={24}>\r\n                    <Modal\r\n                        className=\"del-profile-modal\"\r\n                        visible={visible}\r\n                        title=\"Delete Profile\"\r\n                        okText=\"Delete\"\r\n                        onCancel={onCancel}\r\n                        onOk={onDelete}\r\n                    >\r\n                        Are you sure?\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteProfile;","import axios from 'axios';\r\nconst api_url = process.env.REACT_APP_API_URL;\r\n\r\nexport const httpGetRequest = async (endpoint) => {\r\n    try {\r\n        const response = await axios.get(api_url + endpoint);\r\n        return response.data;   \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const httpPostRequest = async (endpoint, data) => {\r\n    try {\r\n        const response = await axios.post(api_url + endpoint, data);\r\n        return response.data;   \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const httpPutRequest = async (endpoint, data) => {\r\n    try {\r\n        const response = await axios.put(api_url + endpoint, data);\r\n        return response.data;   \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const httpDeleteRequest = async (endpoint) => {\r\n    try {\r\n        const response = await axios.delete(api_url + endpoint);\r\n        return response.data;   \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { Layout, Table, Icon } from 'antd';\r\n\r\nimport PageHeader from '../../../commons/page_header';\r\nimport PageFooter from '../../../commons/page_footer';\r\nimport NewProfileModal from '../new_profile';\r\nimport EditProfileModal from '../edit_profile';\r\nimport DeleteProfileModal from '../delete_profile';\r\n\r\nimport { httpGetRequest, httpPostRequest, httpPutRequest, httpDeleteRequest } from '../../../utils/httpRequest.js';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst tableData = [\r\n    {\r\n        id: 1,\r\n        pfname: 'Julius',\r\n        pmname: 'Guevarra',\r\n        plname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 2,\r\n        pfname: 'Lisalea',\r\n        pmname: 'Angeles',\r\n        plname: 'Santiago',\r\n    },\r\n    {\r\n        id: 3,\r\n        pfname: 'Julius',\r\n        pmname: 'Guevarra',\r\n        plname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 4,\r\n        pfname: 'Lisalea',\r\n        pmname: 'Angeles',\r\n        plname: 'Santiago',\r\n    },\r\n    {\r\n        id: 5,\r\n        pfname: 'Julius',\r\n        pmname: 'Guevarra',\r\n        plname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 6,\r\n        pfname: 'Lisalea',\r\n        pmname: 'Angeles',\r\n        plname: 'Santiago',\r\n    },\r\n    {\r\n        id: 7,\r\n        pfname: 'Julius',\r\n        pmname: 'Guevarra',\r\n        plname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 8,\r\n        pfname: 'Lisalea',\r\n        pmname: 'Angeles',\r\n        plname: 'Santiago',\r\n    },\r\n    {\r\n        id: 9,\r\n        pfname: 'Julius',\r\n        pmname: 'Guevarra',\r\n        plname: 'De Guzman',\r\n    },\r\n    {\r\n        id: 10,\r\n        pfname: 'Lisalea',\r\n        pmname: 'Angeles',\r\n        plname: 'Santiago',\r\n    },\r\n];\r\n\r\nclass Actions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        const { editProfile, profileId, profileData,delProfile }= this.props;\r\n        return(\r\n        <div>\r\n            <Icon className=\"action-icons\" type=\"edit\" onClick={() => editProfile(profileId, profileData)}/>\r\n            <Icon className=\"action-icons\" type=\"delete\" onClick={() => delProfile(profileId)}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Profiles extends Component {\r\n    state = {\r\n        isNewProfileModalVisible: false,\r\n        isEditProfileModalVisible: false,\r\n        isDeleteProfileModalVisible: false,\r\n        profilesData: [],\r\n        profileId: 0\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleGetProfiles()\r\n    }\r\n\r\n    handleGetProfiles = () => {\r\n        httpGetRequest('profiles').then(result => {\r\n            console.log(\"get result: \", result)\r\n            this.setState({\r\n                profilesData: result.reverse()\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSaveProfile = (data) => {\r\n        httpPostRequest('new-profile', data).then(result => {\r\n            console.log(\"post result: \", result)\r\n            this.handleGetProfiles()\r\n        })\r\n    }\r\n\r\n    handleProfileUpdate = (data) => {\r\n        const { profileId } = this.state;\r\n        httpPutRequest('update-profile/' + profileId, data).then(result => {\r\n            console.log(\"put result: \", result)\r\n            this.handleGetProfiles()\r\n        })\r\n    }\r\n\r\n    handleProfileDelete = () => {\r\n        const { profileId } = this.state;\r\n        httpDeleteRequest('delete-profile/' + profileId).then(result => {\r\n            console.log(\"delete result: \", result)\r\n            this.handleGetProfiles()\r\n\r\n            this.setState({\r\n                isDeleteProfileModalVisible: false\r\n            });\r\n        })\r\n    }\r\n\r\n    handleEditProfile = (id, data) => {\r\n        const { form } = this.formRefUpdate.props;\r\n        form.setFieldsValue({\r\n            pfname: data.pfname,\r\n            pmname: data.pmname,\r\n            plname: data.plname\r\n        })\r\n        this.setState({\r\n            isEditProfileModalVisible: true,\r\n            profileId: id\r\n        });\r\n    }\r\n\r\n    handleUpdateProfile = () => {\r\n        const { form } = this.formRefUpdate.props;\r\n        form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                this.handleProfileUpdate(values);\r\n                form.resetFields();\r\n                this.setState({ isEditProfileModalVisible: false });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCancelEdit = () => {\r\n        const { form } = this.formRefUpdate.props;\r\n        form.resetFields();\r\n        this.setState({\r\n            isEditProfileModalVisible: false\r\n        });\r\n    }\r\n\r\n    updateFormRef = formRefUpdate => {\r\n        this.formRefUpdate = formRefUpdate;\r\n    };\r\n\r\n    handleNewProfile = () => {\r\n        this.setState({\r\n            isNewProfileModalVisible: true\r\n        });\r\n    }\r\n\r\n    handleCreateProfile = () => {\r\n        const { form } = this.formRefSave.props;\r\n        form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.handleSaveProfile(values);\r\n                form.resetFields();\r\n                this.setState({ isNewProfileModalVisible: false });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCancelNew = () => {\r\n        const { form } = this.formRefSave.props;\r\n        form.resetFields();\r\n        this.setState({\r\n            isNewProfileModalVisible: false\r\n        });\r\n    }\r\n\r\n    saveFormRef = formRefSave => {\r\n        this.formRefSave = formRefSave;\r\n    };\r\n\r\n    handleDeleteProfile = (id) => {\r\n        this.setState({\r\n            isDeleteProfileModalVisible: true,\r\n            profileId: id\r\n        });\r\n    }\r\n\r\n    handleCancelDelete = () => {\r\n        this.setState({\r\n            isDeleteProfileModalVisible: false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { isNewProfileModalVisible, isEditProfileModalVisible, isDeleteProfileModalVisible, profilesData } = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: 'FIRST NAME',\r\n                dataIndex: 'pfname',\r\n            },\r\n            {\r\n                title: 'MIDDLE NAME',\r\n                dataIndex: 'pmname',\r\n            },\r\n            {\r\n                title: 'LAST NAME',\r\n                dataIndex: 'plname',\r\n            },\r\n            {\r\n                title: <Icon className=\"new-profile-icon\" type=\"form\" onClick={() => this.handleNewProfile()}/>,\r\n                dataIndex: \"id\",\r\n                render: (a, row) => <Actions \r\n                                        profileId={a} \r\n                                        profileData={row} \r\n                                        editProfile={(id,data) => this.handleEditProfile(id, data)}\r\n                                        delProfile={(id) => this.handleDeleteProfile(id)}\r\n                                    />\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Layout className=\"profiles-body\">\r\n                <PageHeader/>\r\n                <Content className=\"profiles-content\">\r\n                    <Table\r\n                        className=\"content-table\"\r\n                        columns={tableColumns}\r\n                        dataSource={profilesData}\r\n                        pagination={{defaultPageSize: 7}}\r\n                        rowKey=\"id\"\r\n                    />\r\n                </Content>\r\n                <NewProfileModal wrappedComponentRef={this.saveFormRef} visible={isNewProfileModalVisible} onCancel={() => this.handleCancelNew()} onCreate={() => this.handleCreateProfile()}/>\r\n                <EditProfileModal wrappedComponentRef={this.updateFormRef} visible={isEditProfileModalVisible} onCancel={() => this.handleCancelEdit()} onUpdate={() => this.handleUpdateProfile()}/>\r\n                <DeleteProfileModal visible={isDeleteProfileModalVisible} onCancel={() => this.handleCancelDelete()} onDelete={() => this.handleProfileDelete()}/> \r\n                <PageFooter/>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profiles;","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './modules/profile/profiles';\r\n\r\nfunction App() {\r\n  return (\r\n    <MainPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}